{
    /*
     tsconfig.json是ts编译器的配置文件，ts编译器可以根据它的信息来对代码进行编译
        “include” 用来指定哪些ts文件需要被编译
             路径: ** 表示任意目录
                   * 表示任意文件
        "exclude" 不需要被编译的文件目录  
             默认值: ["node_modules","bower_components","jspm_packages"] 
        "extends"  扩展 继承 相当于引入其他的json文件


     */ 
     "include":[
        //  一个*表示的是任意文件，两个*表示的是任意目录
         "./src/**/*"
     ],
     "exclude":[
         "./src/hello/**/*"
     ],
    //  当前配置文件会自动包含config目录下的base.json中的所有配置信息
    //  "extends":"./config/base",

    /*
      compilerOptions 编译器的选项（tsconfig.json中最重要的配置，里面有很多子选项）
    */ 
    "compilerOptions":{
        // target 用来指定ts被编译为的ES的版本 
        // 能填的值有很多 'ES3', 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020'
        "target":"es6",

        // module 指定要使用的模块化的规范
        // 'none', 'commonjs', 'amd', 'system', 'umd', 'es6', 'es2015', 'es2020', 'esnext'
        "module":"es6",

        // lib用来指定项目中要使用的库，一般不去设置它,它可填写的值有很多
        // "lib":[]

        // outDir 用来指定编译后文件所在的目录
        "outDir":"./dist",

        // 将代码合并为一个文件
        // 设置outFile后，所有的全局作用域中的代码会合并到同一个文件中,用的不多。
        // "outFile":"./dist/app.js"  // 仅支持 amd 和 system

        // 是否对js文件进行编译,默认是false
        "allowJs":true,

        // 是否检查js代码是否符合语法规范，默认为false
        "checkJs":false,

        // 是否移除注释,编译之后就没有注释了
        "removeComments":true,
        
        // 不生成编译后的文件
        "noEmit":false,

        // 当有错误时不生成编译后的文件
        "noEmitOnError":true,

        // 所有严格检查的总开关 这个一旦设置为true或者false，相当于所有的严格检查都已经打开或者关闭，下面的那几个属性，例如alwaysStrict都跟strict的保持一致
        "strict":true,

        // 用来设置编译后的文件是否使用严格模式，默认false
        "alwaysStrict": false,

        // 不允许隐式的any类型
        "noImplicitAny": true,

        // 不允许不明确类型的this,默认值是false
        "noImplicitThis": false,

        // 严格的检查空值
        "strictNullChecks":true




    }


}